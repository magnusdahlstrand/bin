#!/usr/bin/env bash

set -e

# Default options
quality=100
outdir="./out"
widths="1024 1280 1366 1440 1680 1920"
scale=1
autoformat=true
format=""

# Usage if no params
if [[ -z "$1" ]]; then
	echo "usage: resize-images [-q 100] [-o ./outdir] [-f jpg] [-s 1] [-w 1280 1280@2] image.jpg [image-2.jpg ...]"
	echo ""
	echo "Resizes and optimises images, saves to jpg to png"
	echo ""
	echo "-q quality"
	echo "-o output directory"
	echo "-w list of widths"
	echo "-s scale"
	echo "-f save to format (jpg or png)"
	echo ""
	echo "Defaults:"
	echo "-q $quality"
	echo "-o $outdir"
	echo "-w $widths"
	echo "-s $scale"
	echo "-f auto"
	echo ""
	echo "It is recommended to have original images larger"
	echo "than the sizes indicated in the file names."
	exit 1
fi

# Parse arguments
while [[ "${1:0:1}" == "-" ]]; do
	opt=${1:1:1}
	shift
	case "$opt" in
		o) #outdir
			outdir=$1
			shift
			;;
		q) #quality
			quality=$1
			shift
			;;
		f) #format
			format=$1
			shift
			autoformat=false
			;;
		s) #scale
			scale=$1
			shift
			;;
		w) #widths
			widths=""
			while [[ ! -f "$1" ]] && [[ ! ${1:0:1} == '-' ]] && [[ "$#" -gt 0 ]]; do
				widths="$widths$1 "
				shift
			done
			;;
		*)
			echo "option \"$opt\" not recognised"
			exit 5
	esac
done


if [[ -z "$widths" ]]; then
	echo "No widths"
	exit 8
fi

if [[ "$#" -lt 1 ]]; then
	echo "No files"
	exit 6
fi

echo "Quality: $quality"
echo "Output dir: $outdir"
if $autoformat; then
	echo "Format: auto"
else
	echo "Format: $format"
fi
echo "Widths: $widths"
echo "Scale: $scale"

mkdir -p $outdir

# Loop over every file
for file in "$@"; do
	# Ensure the file is a file and not a directory
	if [[ ! -f "$1" ]]; then
		echo "input file is a folder: $file"
		exit 7
	fi
	# Extract filename
	# $file is $filepath/$base
	# $base is $filename.$ext
	base=$(basename "$file")
	filename=${base%.*}
	ext=${base##*.}
	for sizedef in $widths; do
		# Get the density and width
		if [[ "$sizedef" == *"@"* ]]; then
			width=$(cut -d'@' -f1 <<< "$sizedef")
			density=$(cut -d'@' -f2 <<< "$sizedef")
		else
			width="$sizedef"
			density=1
		fi
		# Ensure we have width and density
		if [[ -z "$width" ]]; then
			echo "unable to parse width"
			exit 3
		fi
		if [[ -z "$density" ]]; then
			echo "unable to parse density"
			exit 4
		fi
		# Calculate scaled width
		scaledwidth=$(bc <<< "$width * $scale")
		# Floor the resulting width
		scaledwidth=${scaledwidth%.*}
		# Calculate final width
		fullwidth=$(bc <<< "$scaledwidth * $density")
		# Construct output path
		outpath="$outdir/$filename-$width@$density"
		if $autoformat; then
			outpath="$outpath.$ext"
		else
			outpath="$outpath.$format"
		fi
		echo "$base -> $outpath ("$fullwidth"px)"
		# strip metadata, progressive interlace, set quality, resize
		convert -strip -interlace Plane -quality $quality -resize "$fullwidth"x "$file" "$outpath"
	done
done